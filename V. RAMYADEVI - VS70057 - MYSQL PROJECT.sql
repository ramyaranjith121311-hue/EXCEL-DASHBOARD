USE AMAZON;

/* TASK3 - Retrieve all customers from a specific city? */
SELECT NAME,CITY FROM CUSTOMERS WHERE CITY="NORTH KYLE" ;

/* TASK3 - Fetch all products under the "Fruits" category? */
SELECT PRODUCTNAME,CATEGORY FROM PRODUCTS WHERE CATEGORY="FRUITS";

/*  TASK4 Write DDL statements to recreate the Customers table with the following constraints: 
1.CustomerID as the primary key? */
ALTER TABLE CUSTOMERS CHANGE COLUMN Customer_ID Customer_ID VARCHAR(100) PRIMARY KEY;

/* 2.Ensure Age cannot be null and must be greater than 18? */
ALTER TABLE CUSTOMERS CHANGE COLUMN Age Age INT NOT NULL;
ALTER TABLE CUSTOMERS ADD  CHECK (AGE>=18);                                                        

/* 3.Add a unique constraint for Name? */
ALTER TABLE CUSTOMERS ADD CONSTRAINT  UNIQUE (NAME);                                                       

/* TASK5  Insert 3 new rows into the Products table using INSERT statements? */
INSERT INTO PRODUCTS VALUES("WURID-1244-2NBB64-43","HOWEVER FRUIT","FRUITS","SUB-FRUITS-1",324,897,"98H-GDR-T567-89");
INSERT INTO PRODUCTS VALUES("13RFDR345YHHRF","EVRER GREEN FRUIT","FRUITS","SUB-FRUITS-1",2345,5432,"23FVD355MMGK443");
INSERT INTO PRODUCTS VALUES("WURID-1244-2NBB64-400","HOWEVER FRUIT","FRUITS","SUB-FRUITS-1",324,897,"98098HJKI-DR-T567-89");

/* TASK6  Update the stock quantity of a product where ProductID matches a specific ID? */
SET SQL_SAFE_UPDATES =0;
UPDATE PRODUCTS SET STOCKQUANTITY=999 WHERE PRODUCT_ID= "d79d1b95-ecdf-4810-aea0-45e9bd10627d";

/* TASK7 Delete a supplier from the Suppliers table where their city matches a specific VALUES */
SELECT*FROM SUPPLIERS;
DELETE FROM SUPPLIERS WHERE CITY="SCHNEIDERMOUTH";

/* TASK8
o Add a CHECK constraint to ensure that ratings in the Reviews table are between 1 AND 5 ? */
SELECT*FROM REVIEWS;
ALTER TABLE REVIEWS ADD CONSTRAINT CHECK (RATING BETWEEN 1 AND 5);

/* o Add a DEFAULT constraint for the PrimeMember column in the Customers table (default value: "No")? */
SELECT*FROM CUSTOMERS;
ALTER TABLE CUSTOMERS MODIFY COLUMN PRIMEMEMBER VARCHAR(100)  DEFAULT "NO";

/* TASK9
o WHERE clause to find orders placed after 2024-01-01? */
SELECT*FROM ORDERS;
SELECT * FROM ORDERS WHERE OrderDate > "2024-01-01";

/* o HAVING clause to list products with average ratings greater than 4? */ 
SELECT*FROM PRODUCTS;
SELECT*FROM REVIEWS;
SELECT P.PRODUCTNAME,ROUND(AVG(R.RATING),1) AS AVG_RATING
FROM PRODUCTS AS P
JOIN REVIEWS AS R ON (P.PRODUCT_ID=R.PRODUCTID)
GROUP BY P.PRODUCTNAME 
HAVING AVG(R.RATING) > 4;

/* o GROUP BY and ORDER BY clauses to rank products by total sales? */
SELECT*FROM PRODUCTS;
SELECT*FROM ORDER_DETAILS;
SELECT*FROM ORDERS;
SELECT P.PRODUCTNAME,SUM(O.UNITPRICE) AS TOTAL_SALES
FROM PRODUCTS AS P
JOIN ORDER_DETAILS AS O
ON (P.PRODUCT_ID=O.PRODUCTID)
GROUP BY PRODUCTNAME
ORDER BY TOTAL_SALES DESC;

/* TASK10 
1. Calculate each customer's total spending? */
SELECT*FROM CUSTOMERS;
SELECT*FROM ORDERS;
SELECT DISTINCT(C.CUSTOMER_ID),SUM(O.ORDERAMOUNT) AS TOTAL_SPENDING
FROM CUSTOMERS AS C
JOIN ORDERS AS O
ON (C.CUSTOMER_ID=O.CUSTOMERID)
GROUP BY C.CUSTOMER_ID 
ORDER BY TOTAL_SPENDING DESC;

/* 2. Rank customers based on their spending? */
SELECT DISTINCT NAME,SUM(O.ORDERAMOUNT) AS TOTAL_SPENDING,
RANK() OVER(ORDER BY SUM(O.ORDERAMOUNT)DESC) AS RANKING
FROM CUSTOMERS AS C
JOIN ORDERS AS O
ON (C.CUSTOMER_ID=O.CUSTOMERID)
GROUP BY C.CUSTOMER_ID ,NAME
ORDER BY TOTAL_SPENDING DESC;

/* 3. Identify customers who have spent more than ₹5,000? */
SELECT C.CUSTOMER_ID,NAME, SUM(O.ORDERAMOUNT) AS TOTAL_SPENDING
FROM CUSTOMERS AS C
JOIN ORDERS AS O
ON (C.CUSTOMER_ID=O.CUSTOMERID)
WHERE O.ORDERAMOUNT > 5000
GROUP BY C.CUSTOMER_ID,NAME
ORDER BY TOTAL_SPENDING;

/* TASK11 */
/* 1. Join the Orders and OrderDetails tables to calculate total revenue per order? */
SELECT*FROM ORDERS;
SELECT*FROM ORDER_DETAILS;
SELECT O.CUSTOMERID,OD.ORDER_ID,SUM(O.ORDERAMOUNT) AS TOTAL_REVENUE
FROM ORDERS AS O
JOIN ORDER_DETAILS AS OD
ON (O.ORDER_ID=OD.ORDER_ID)
GROUP BY O.CUSTOMERID,OD.ORDER_ID
ORDER BY TOTAL_REVENUE DESC;

/* 2. Identify customers who placed the most orders in a specific time period. */
SELECT*FROM CUSTOMERS;
SELECT*FROM ORDERS;
SELECT C.CUSTOMER_ID,C.NAME,COUNT(O.ORDER_ID) AS TOTALORDERS
FROM CUSTOMERS AS C
JOIN ORDERS AS O
ON (C.CUSTOMER_ID=O.CUSTOMERID)
GROUP BY C.CUSTOMER_ID, C.NAME
ORDER BY TOTALORDERS DESC 
LIMIT 1;

/* 3. Find the supplier with the most products in stock? */
SELECT*FROM PRODUCTS;
SELECT*FROM SUPPLIERS;
SELECT S.SUPPLIERS_ID,S.SUPPLIERNAME,sum(P.STOCKQUANTITY) over() AS STOCK 
FROM PRODUCTS AS P
JOIN SUPPLIERS AS S
ON P.SUPPLIERID=S.SUPPLIERS_ID
ORDER BY STOCK DESC
LIMIT 1;                                                                             /* RETURNING ROWS AS 0 */

/* TASK12 Separate product categories and subcategories into a new table? */
SELECT* FROM PRODUCTS;
CREATE VIEW NEW_TABLE AS(SELECT CATEGORY AS C,SUBCATEGORY AS S
FROM PRODUCTS);
SELECT*FROM NEW_TABLE;

/* TASK13 Identify the top 3 products based on sales revenue? */
SELECT*FROM PRODUCTS;
SELECT*FROM ORDER_DETAILS;
SELECT P.PRODUCTNAME, SUM(O.QUANTITY*O.UNITPRICE) AS REVENUE
FROM PRODUCTS AS P
JOIN ORDER_DETAILS AS O
ON (P.PRODUCT_ID=O.PRODUCTID)
GROUP BY P.PRODUCTNAME
ORDER BY REVENUE DESC
LIMIT 3;

/* Find customers who haven’t placed any orders yet? */
SELECT*FROM CUSTOMERS;
SELECT*FROM ORDERS;
SELECT NAME AS NON_ORDERED_CUSTOMER
FROM CUSTOMERS AS C
LEFT JOIN ORDERS AS O
ON (C.CUSTOMER_ID=O.CUSTOMERID)
WHERE O.ORDER_ID IS NULL 
GROUP BY NAME;

/* TASK14 Which cities have the highest concentration of Prime members? */

SELECT CITY, COUNT(*) AS PRIME_MEMBERS
FROM CUSTOMERS
WHERE PRIMEMEMBER="YES"
GROUP BY CITY
ORDER BY PRIME_MEMBERS DESC ;

/* What are the top 3 most frequently ordered categories? */
SELECT*FROM PRODUCTS;
SELECT*FROM ORDER_DETAILS;
SELECT CATEGORY, COUNT(O.ORDER_ID) AS MOST_ORDER_BY_CATEGORY
FROM PRODUCTS AS P
JOIN ORDER_DETAILS AS O
ON (P.PRODUCT_ID=O.PRODUCTID)
GROUP BY CATEGORY
ORDER BY MOST_ORDER_BY_CATEGORY DESC ;